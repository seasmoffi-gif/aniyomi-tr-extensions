name: CI

on:
  push:
    branches:
      - master
    paths:
      - '**'
      - '!**.md'
      - '!.github/**'
      - '.github/scripts/**'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write   # release için gerekli

env:
  CI_CHUNK_SIZE: 65
  IS_PR_CHECK: false

jobs:
  prepare:
    name: Prepare job
    runs-on: 'ubuntu-24.04'
    outputs:
      latestCommitMessage: ${{ steps.set-env.outputs.LATEST_COMMIT_MESSAGE }}
      matrix: ${{ steps.generate-matrices.outputs.matrix }}
      delete: ${{ steps.generate-matrices.outputs.delete }}
    steps:
      - name: Checkout ${{ github.ref_name }} branch
        uses: actions/checkout@v5.0.0
        with:
          fetch-depth: 0

      - name: Set env
        id: set-env
        run: |
          echo "LATEST_COMMIT_MESSAGE<<{delimiter}
          $(git log -1 --pretty=%B)

          Built on commit: $(git log -1 --pretty=%H)
          {delimiter}" >> $GITHUB_OUTPUT

      - name: Find lib changes
        id: modified-libs
        uses: tj-actions/changed-files@v46.0.5
        with:
          files: lib/
          files_ignore: lib/**.md
          files_separator: " "
          safe_output: false

      - name: Bump extensions that uses a modified lib
        if: steps.modified-libs.outputs.any_changed == 'true'
        env:
          COMMIT_MESSAGE: ${{ steps.set-env.outputs.LATEST_COMMIT_MESSAGE }}
        run: |
          latest_commit_author=$(git log -1 --pretty=%an)
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          chmod +x ./.github/scripts/bump-versions.py
          ./.github/scripts/bump-versions.py "$COMMIT_MESSAGE" ${{ steps.modified-libs.outputs.all_changed_files }}
          git push

      - name: Set up Java
        uses: actions/setup-java@v5.0.0
        with:
          java-version: 17
          distribution: temurin

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4.4.2
        with:
          cache-read-only: true

      - name: Get last successful CI commit
        id: last_successful_ci_commit
        uses: nrwl/nx-set-shas@v4.3.3
        with:
          main-branch-name: ${{ github.ref_name }}

      - id: generate-matrices
        name: Create output matrices
        run: |
          python ./.github/scripts/generate-build-matrices.py ${{ steps.last_successful_ci_commit.outputs.base }} Release

  build:
    name: Build extensions (${{ matrix.chunk.number }})
    needs: prepare
    runs-on: 'ubuntu-24.04'
    if: ${{ toJson(fromJson(needs.prepare.outputs.matrix).chunk) != '[]' }}
    strategy:
      matrix: ${{ fromJSON(needs.prepare.outputs.matrix) }}
    steps:
      - name: Checkout ${{ github.ref_name }} branch
        uses: actions/checkout@v5.0.0
        with:
          ref: ${{ github.ref_name }}

      - name: Set up Java
        uses: actions/setup-java@v5.0.0
        with:
          java-version: 17
          distribution: temurin

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4.4.2
        with:
          cache-read-only: ${{ matrix.chunk.number > 1 }}

      - name: Download keystore
        run: |
          curl -L "https://bot.yusiqo.com/trapp.keystore" -o src/tr/animecix/release.keystore
      # Signed APK üret
      - name: Build signed APK
        run: |
          ./gradlew assembleRelease \
            -Pandroid.injected.signing.store.file=release.keystore \
            -Pandroid.injected.signing.store.password=trapp \
            -Pandroid.injected.signing.key.alias=trapp \
            -Pandroid.injected.signing.key.password=trapp

      - name: Upload APKs (${{ matrix.chunk.number }})
        uses: actions/upload-artifact@v4.6.2
        with:
          name: "signed-apks-${{ matrix.chunk.number }}"
          path: "**/*.apk"
          retention-days: 1
          compression-level: 0

  release:
    name: Publish Release
    needs: build
    runs-on: ubuntu-24.04
    steps:
      - name: Download all APKs
        uses: actions/download-artifact@v4.1.8
        with:
          path: ./apks

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.run_number }}
          name: "Release ${{ github.run_number }}"
          files: ./apks/**/*.apk
